# Commerce HTTP client authentication configuration
# In case the app needs to communicate with Adobe Commerce, the following environment variables are required considering
# the authentication method used. Inject these variables into your actions using input parameters.
#
# Option 1: Authenticate with IMS
# Will be populated automatically when app build for first time or can be synced on demand using `npm run sync-oauth-credentials` command.
# To configure Commerce instance to allow this creds please follow https://developer.adobe.com/commerce/extensibility/starter-kit/checkout/connect/#adobe-identity-management-service-ims
# Note OAUTH_CLIENT_SECRETS and OAUTH_SCOPES should be arrays
OAUTH_CLIENT_ID=
OAUTH_CLIENT_SECRETS=[""]
OAUTH_TECHNICAL_ACCOUNT_ID=
OAUTH_TECHNICAL_ACCOUNT_EMAIL=
OAUTH_SCOPES=[""]
OAUTH_IMS_ORG_ID=
# Option 2: Authenticate with Commerce integration
#COMMERCE_CONSUMER_KEY=
#COMMERCE_CONSUMER_SECRET=
#COMMERCE_ACCESS_TOKEN=
#COMMERCE_ACCESS_TOKEN_SECRET=

# Contains the mapping of the event provider metadata and the provider id
AIO_EVENTS_PROVIDERMETADATA_TO_PROVIDER_MAPPING=

# Environment for AIO: stage or prod (default)
#AIO_CLI_ENV=

# General Commerce Configuration
# Commerce REST endpoint should finish with slash '/'
# Examples:
# - Commerce Admin REST endpoints: https://{commerce_instance_url}/rest/{store_view_code}/
# - Adobe Commerce Cloud as a Service: https://na1.api.commerce.adobe.com/{tenant_code}/
COMMERCE_BASE_URL=
# Required if webhooks are used and signature verification is enabled
COMMERCE_WEBHOOKS_PUBLIC_KEY=
# The payment method codes that this app is implementing, has to be in sync with the payment-methods.yaml file.
COMMERCE_PAYMENT_METHOD_CODES=[""]

# Commerce Event Module configs
# These values will be used to configure the Adobe I/O Events module automatically
# that can be found at Stores > Configuration > Adobe Services > Adobe I/O Events > Commerce events
COMMERCE_ADOBE_IO_EVENTS_MERCHANT_ID=
COMMERCE_ADOBE_IO_EVENTS_ENVIRONMENT_ID=
